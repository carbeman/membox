#
# Makefile.in for @FOOBOX@.
#
# This file is currently maintained manually. There is currently
# no generation out of automake. This will change as soon as we
# switch to our new autoconf/configure build process.
#

SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
datarootdir = @datarootdir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
logdir = @exec_prefix@/logs
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

docdir = @docdir@

DESTDIR =

top_builddir = .

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
CC = @CC@
MAKEINFO = @MAKEINFO@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
SHELL = @SHELL@
VERSION = @VERSION@
SUFFIX = @SUFFIX@
LEX = @LEX@
PERL = @PERL@
YACC = @YACC@

# -v gives verbose output.
YFLAGS = -d -p ws_yy_

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = gw-@FOOBOX@-config.h
CONFIG_CLEAN_FILES =

LIBOBJS=@LIBOBJS@
LIBSRCS=$(LIBOBJS:.o=.c)

LIBS=@LIBS@
CFLAGS=-D_REENTRANT=1 -I. -Igw -Igwlib @CFLAGS@
LDFLAGS=@LDFLAGS@

MKDEPEND=$(CC) $(CFLAGS) -MM

# Set this to something if you want all installed binaries to have a suffix.
# Version number is common.
suffix = $(SUFFIX)

#
# You probably don't need to touch anything below this, if you're just
# compiling and installing the software.
#

binsrcs = 
binobjs = $(binsrcs:.c=.o)
binprogs = $(binsrcs:.c=@EXE_EXT@)

sbinsrcs = gw/@FOOBOX@.c 
progsrcs = $(sbinsrcs)
progobjs = $(progsrcs:.c=.o)
progs = $(progsrcs:.c=@EXE_EXT@)
sbinprogs = $(sbinsrcs:.c=)

gwsrcs = $(wildcard gw/*.c)
gwobjs = $(gwsrcs:.c=.o)

gwlibsrcs = $(wildcard gwlib/*.c)
gwlibobjs = $(gwlibsrcs:.c=.o)

testsrcs = $(wildcard test/*.c)
testobjs = $(testsrcs:.c=.o)
testprogs = $(testsrcs:.c=@EXE_EXT@)
tests = $(testprogs) $(wildcard test/*.sh)

rootobjs = README.@FOOBOX@

srcs = $(wildcard */*.c)
objs = $(srcs:.c=.o)
pres = $(srcs:.c=.i)

libs = lib@FOOBOX@.a

srcdirs = gw

.SUFFIXES: $(SUFFIXES) .c .i .o .lo .so

.c.o:
	$(CC) $(CFLAGS) -o $@ -c $<

.c.i:
	$(CC) $(CFLAGS) -o $@ -E $<

.c.lo:
	$(CC) $(CFLAGS) -o $@ -c $<
	
.lo.so:
	$(CC) -shared -o $@ $<
	
all: progs $(binprogs) $(testprogs) @FOOBOX@-config

progs: $(progs)
tests: $(testprogs)
pp: $(pres)

depend .depend: gw-@FOOBOX@-config.h
	for dir in $(srcdirs); do \
	for file in $$dir/*.c; do \
	    $(MKDEPEND) $$file -MT $$dir/`basename $$file .c`.o -MT $$dir/`basename $$file .c`.i; done; done > .depend  
include .depend

lib@FOOBOX@.a: $(gwobjs)
	@LIBTOOL@ lib@FOOBOX@.a $(gwobjs)
	$(RANLIB) lib@FOOBOX@.a

install: all
	$(INSTALL) -d $(DESTDIR)$(prefix)
	for prog in $(rootobjs); do \
		$(INSTALL) $$prog \
			$(DESTDIR)$(prefix)/`basename $$prog`$(suffix); \
	done
	$(INSTALL) -d $(DESTDIR)$(bindir)
	for prog in $(binprogs) @FOOBOX@-config; do \
		$(INSTALL) $$prog \
		    $(DESTDIR)$(bindir)/`basename $$prog`$(suffix); \
	done
	$(INSTALL) -d $(DESTDIR)$(sbindir)
	for prog in $(sbinprogs); do \
		$(INSTALL) $$prog \
		    $(DESTDIR)$(sbindir)/`basename $$prog`$(suffix); \
	done
	$(INSTALL) -d $(DESTDIR)$(includedir)/@FOOBOX@
	$(INSTALL) -d $(DESTDIR)$(sysconfdir)
	test -r $(DESTDIR)$(bindir)/@FOOBOX@-config || \
		ln -sf @FOOBOX@-config$(suffix) $(DESTDIR)$(bindir)/@FOOBOX@-config

clean:
	find . -name "*.o" -o -name "*.i" -o -name "*.a" | xargs rm -f
	rm -f core $(progs) $(pluginobjs) $(pluginobjsS) $(plugindsos)

distclean: clean
	rm -f Makefile config.cache config.log config.status config.nice .depend

$(progs): $(libs) $(progobjs)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(@:@EXE_EXT@=).o  $(libs) $(LIBS)

$(binprogs): $(libs) $(binobjs)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(@:@EXE_EXT@=).o $(libs) $(LIBS)

$(testprogs): $(testobjs) $(libs)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(@:@EXE_EXT@=).o $(libs) $(LIBS)
		
@FOOBOX@-config: utils/foobar-config.sh Makefile
	./utils/foobar-config.sh "-I$(includedir)/kannel -I$(includedir)/@FOOBOX@ @CFLAGS@" \
		"-L$(libdir)/kannel -lgw -lwap -lgwlib @LIBS@" \
		"@VERSION@" > @FOOBOX@-config
	chmod 0755 @FOOBOX@-config
	
