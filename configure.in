dnl /* ==================================================================== 
dnl  * The Kannel Software License, Version 1.0 
dnl  * 
dnl  * Copyright (c) 2001-2008 Kannel Group  
dnl  * Copyright (c) 1998-2001 WapIT Ltd.   
dnl  * All rights reserved. 
dnl  * 
dnl  * Redistribution and use in source and binary forms, with or without 
dnl  * modification, are permitted provided that the following conditions 
dnl  * are met: 
dnl  * 
dnl  * 1. Redistributions of source code must retain the above copyright 
dnl  *    notice, this list of conditions and the following disclaimer. 
dnl  * 
dnl  * 2. Redistributions in binary form must reproduce the above copyright 
dnl  *    notice, this list of conditions and the following disclaimer in 
dnl  *    the documentation and/or other materials provided with the 
dnl  *    distribution. 
dnl  * 
dnl  * 3. The end-user documentation included with the redistribution, 
dnl  *    if any, must include the following acknowledgment: 
dnl  *       "This product includes software developed by the 
dnl  *        Kannel Group (http://www.kannel.org/)." 
dnl  *    Alternately, this acknowledgment may appear in the software itself, 
dnl  *    if and wherever such third-party acknowledgments normally appear. 
dnl  * 
dnl  * 4. The names "Kannel" and "Kannel Group" must not be used to 
dnl  *    endorse or promote products derived from this software without 
dnl  *    prior written permission. For written permission, please  
dnl  *    contact org@kannel.org. 
dnl  * 
dnl  * 5. Products derived from this software may not be called "Kannel", 
dnl  *    nor may "Kannel" appear in their name, without prior written 
dnl  *    permission of the Kannel Group. 
dnl  * 
dnl  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED 
dnl  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
dnl  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
dnl  * DISCLAIMED.  IN NO EVENT SHALL THE KANNEL GROUP OR ITS CONTRIBUTORS 
dnl  * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,  
dnl  * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  
dnl  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR  
dnl  * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,  
dnl  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE  
dnl  * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,  
dnl  * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
dnl  * ==================================================================== 
dnl  * 
dnl  * This software consists of voluntary contributions made by many 
dnl  * individuals on behalf of the Kannel Group.  For more information on  
dnl  * the Kannel Group, please see <http://www.kannel.org/>. 
dnl  * 
dnl  * Portions of this software are based upon software originally written at  
dnl  * WapIT Ltd., Helsinki, Finland for the Kannel project.  
dnl  */ 
dnl

dnl configure.in -- main autoconf macro definition file
dnl
dnl Process this file with autoconf to produce a configure script.
dnl

dnl Initialization

AC_PREREQ(2.5)
AC_INIT()

dnl Define our module name
FOOBOX="membox"
AC_SUBST(FOOBOX)

AC_CONFIG_HEADER(gw-$FOOBOX-config.h)
AC_SUBST(SHELL)
AC_CONFIG_AUX_DIR(.)
AC_SET_TERMINAL_SEQUENCES()
AC_CONFIG_NICE(config.nice)

dnl Check module version number.
PRODUCT_NAME="Kannel $FOOBOX"
VERSION=`head -n 1 VERSION`
if test "x$VERSION" = "xcvs"; then
  AC_MSG_CHECKING([cvs checkout date])
  AC_CVS_DATE(CVS_DATE)
  AC_MSG_RESULT([$CVS_DATE])
  VERSION="$VERSION-$CVS_DATE"
fi
PRODUCT_VERSION="$VERSION"
AC_CONFIG_SECTION([Configuring for $PRODUCT_NAME version $PRODUCT_VERSION])
AC_DEFINE_UNQUOTED(GW_BOX_NAME, "$PRODUCT_NAME")
AC_DEFINE_UNQUOTED(GW_BOX_VERSION, "$PRODUCT_VERSION")
AC_SUBST(GW_BOX_VERSION)
AC_SUBST(VERSION)

dnl Checks system type.
AC_CONFIG_SECTION([Running system checks])
AC_CANONICAL_HOST

dnl Apply system specific rules.
dnl Executable extension for systems that need one, i.e. Cygwin
dnl Set the LIBTOOL to be used to create libs
EXE_EXT=""
LIBTOOL="ar rc"
AC_SUBST(EXE_EXT)
AC_SUBST(LIBTOOL)

AC_ARG_WITH(cflags,
[  --with-cflags=FLAGS     use FLAGS for CFLAGS],
CFLAGS="$CFLAGS $withval")

AC_ARG_WITH(libs,
[  --with-libs=FLAGS       use FLAGS for extra libraries],
LIBS="$LIBS $withval")

dnl Checks for programs.

AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_RANLIB


dnl Check whether compiler supports inline
AC_C_INLINE

dnl Checks for header files.

AC_HEADER_STDC
dnl *** add more header checks here ***

dnl Check for library functions.
dnl *** add more library checks here ***


dnl Implement --enable-warnings option.

AC_ARG_ENABLE(warnings,
[  --enable-warnings       enable compilation warnings [disabled]], [
  echo enabling compilation warnings
  if test -n "$GCC"; then
    CFLAGS="$CFLAGS -Wall"
    CFLAGS="$CFLAGS -Wmissing-prototypes"
    CFLAGS="$CFLAGS -Wmissing-declarations"
    CFLAGS="$CFLAGS -Wnested-externs"
    CFLAGS="$CFLAGS -Winline"
    CFLAGS="$CFLAGS -Wformat -Wformat-security -Wmissing-format-attribute"
    #CFLAGS="$CFLAGS -Wstrict-prototypes"
    #CFLAGS="$CFLAGS -Wredundant-decls"
    #CFLAGS="$CFLAGS -Wconversion"
  fi
])

dnl Check for Kannel installation itself.

AC_CONFIG_SECTION([Checking for Kannel gateway installation])
AC_ARG_WITH(kannel,
[  --with-kannel[=DIR]     where to look for Kannel gateway libs and header files
                          DIR points to the installation [/usr/local]],
[ if test -d "$withval"; then
    kannelloc="$withval";
  else
    AC_MSG_ERROR(Unable to find Kannel gateway libs and/or directories at $withval)
  fi
])

AC_PATH_PROGS(GW_CONFIG, gw-config, no, [$kannelloc/bin:$kannelloc:$PATH])
if test "$GW_CONFIG" = "no"; then
  AC_MSG_ERROR([You MUST have the Kannel gateway core system installed])
else
  AC_MSG_CHECKING([Kannel gateway install dir])
  kannelloc=`dirname $GW_CONFIG`
  kannelloc=`dirname $kannelloc`
  if test -d "$kannelloc/include/kannel/gw" &&
     test -d "$kannelloc/include/kannel/gw/smsc" &&
     test -d "$kannelloc/include/kannel/gwlib" &&     
     test -d "$kannelloc/lib/kannel"; then
    AC_MSG_RESULT([$kannelloc])
  else
    AC_MSG_ERROR([Unable to find Kannel include and/or libs directories at $kannelloc])
  fi
  AC_MSG_CHECKING([Kannel gateway version])
  GW_VERSION=`$GW_CONFIG --version`
  AC_MSG_RESULT([$GW_VERSION])
  LIBS="$LIBS `$GW_CONFIG --libs`"
  CFLAGS="$CFLAGS `$GW_CONFIG --cflags`"
fi


AC_CONFIG_SECTION([Configuring parameters])

dnl Implement --with-suffix=version option.

SUFFIX=""

AC_ARG_WITH(suffix,
[  --with-suffix           set suffix for binaries [foobox-\$VERSION]], [
  if test "x$withval" != "x" ; then
  	SUFFIX=$withval
  fi
])

dnl Implement --enable-suffix option.

AC_ARG_ENABLE(suffix,
[  --enable-suffix         enable suffix for binaries [disabled]], [
  if test "$enableval" = "yes" ; then
    SUFFIX="-$PRODUCT_VERSION-$GW_VERSION"
  else
    SUFFIX=""
  fi
])

if test "x$SUFFIX" != "x" ; then
  AC_MSG_CHECKING(whether to append suffix to binary)
  AC_MSG_RESULT($SUFFIX)
fi

AC_DEFINE_UNQUOTED(SUFFIX, "$SUFFIX")
AC_SUBST(SUFFIX)


AC_CONFIG_SECTION([Configuring external library support])

dnl *** Implement --with-foobar option for 3rd party libs here ***


dnl Final Output

AC_CONFIG_SECTION([Generating output files]) 
AC_OUTPUT(Makefile)


dnl LICENSE notice

AC_CONFIG_SECTION([License information])
cat <<X
+--------------------------------------------------------------------+
| License:                                                           |
| This software is subject to the Kannel Software License, available |
| in this distribution in the file LICENSE. By continuing this       |
| installation process, you are bound by the terms of this license   |
| agreement. If you do not agree with the terms of this license, you |
| must abort the installation process at this point.                 |
|                                                                    |
|                      The Kannel Group <http://www.kannel.org/>     |
+--------------------------------------------------------------------+

Thank you for using Kannel.
X
